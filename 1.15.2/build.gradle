buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'


archivesBaseName = 'telegram-control-1.15.2'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    inputs.property "version", project.mod_version
    inputs.property "mcversion", "1.15.2"
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.mod_version, 'mcversion': "1.15.2"
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.0'
    compile project(':core')
}

build {
    dependencies {
        shadow project(':core')
    }
}

shadowJar {
    zip64 true
    project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]
    classifier '' // Replace the default JAR
    relocate 'com.pengrad.telegrambot', 'eu.jsan.shaded.com.pengrad.telegrambot'
    relocate 'okhttp3', 'eu.jsan.shaded.okhttp3'
    relocate 'okio', 'eu.jsan.shaded.okio'
    dependencies {
        exclude(dependency('com.google.code.gson:gson:.*'))
        exclude(dependency('org.apache.commons:commons-lang3:.*'))
        exclude(dependency('org.apache.logging.log4j:log4j-api:.*'))
    }
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}
